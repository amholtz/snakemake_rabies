import os

# To run locally:
# snakemake --snakefile snakefile_phylogeography --keep-going --cores 4 --config folder=.. --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To visualise the pipeline
# snakemake --snakefile snakefile_phylogeography --config folder=.. --dag | dot -Tsvg > pipeline_phylogeography.svg

localrules: all, pastml_itol, fig
#ruleorder: pastml_col > nex2nwk

folder = os.path.abspath(config["folder"])
data_dir = os.path.join(folder, 'data')

os.makedirs('logs', exist_ok=True)

rule all:
    input:
        os.path.join(data_dir, 'dates_lsd.tab'),
        os.path.join(data_dir, 'iq_tree.ntips'),
        os.path.join(data_dir, 'raxmlng_tree.ntips'),
        os.path.join(data_dir, 'iq_tree.root.lsd2.nexus'),
        os.path.join(data_dir, 'raxmlng_tree.root.lsd2.nexus'),

rule extract_dates_lsd:
    '''
    Reformats metadata into date file readable by LSD.
    '''
    input:
        tab = os.path.join(data_dir, 'ncbi_cleaned.tab')
    output:
        tab = os.path.join(data_dir, 'dates_lsd.tab')
    params:
        mem = 1000,
        name = 'dates',
        date_col = 'collection_date'
    threads: 1
    singularity: "docker://evolbioinfo/python-evol:v3.6"
    shell:
        """
        python3 py/extract_dates_lsd.py --data {input.tab} --dates {output.tab} \
        --date_col {params.date_col}
        """

rule tree_size:
    '''
    Calculates tree size.
    '''
    input:
        tree_iq = os.path.join(data_dir, 'iq_tree.nwk'),
        tree_rax = os.path.join(data_dir, 'raxmlng_tree.nwk'),

    output:
        length_iq = os.path.join(data_dir, 'iq_tree.ntips'),
        length_rax = os.path.join(data_dir, 'raxmlng_tree.ntips'),
    singularity:
        "docker://evolbioinfo/gotree:v0.3.0b"
    params:
        mem = 2000,
        name = 'tree_size',
        qos = 'fast'
    threads: 1
    shell:
        """
        gotree stats -i {input.tree_iq} | tail -n 1 | awk '{{print $3}}' > {output.length_iq}
        gotree stats -i {input.tree_rax} | tail -n 1 | awk '{{print $3}}' > {output.length_rax}
        """

rule iq_date_lsd2:
    '''
    Dates a tree and roots the tree according to dates
    no -v
    '''
    input:
        aln_length =  os.path.join(data_dir, 'aln.length'),
        tree = os.path.join(data_dir, 'iq_tree.nwk'),
        ntips = os.path.join(data_dir, 'iq_tree.ntips'),
        dates = os.path.join(data_dir, 'dates_lsd.tab'),
    output:
        tree = os.path.join(data_dir, 'iq_tree.root.lsd2.nexus'),
        log = os.path.join(data_dir, 'iq_tree.root.lsd2.log'),
        rd = os.path.join(data_dir, 'iq_tree.root.lsd2.rootdate'),
        outliers = os.path.join(data_dir, 'iq_tree.outliers'),
    threads: 1
    singularity: "docker://evolbioinfo/lsd2:v1.6.5"
    params:
        mem = 4000,
        name = 'lsd2',
        wd = os.path.join(data_dir, 'iq_tree.root.wd_lsd2'),
    shell:
        """
        n=`head {input.aln_length}`
        t=`head {input.ntips}`
        m=`awk -v t="$t" 'BEGIN {{ m=int(t * 0.33); print m}}'`

        echo "lsd2 -i {input.tree} -d {input.dates} -s $n -o {params.wd} -f 1000 -e 3 -r a"

        lsd2 -i {input.tree} -d {input.dates} -s $n -o {params.wd} -f 1000 -e 3 -r a

        pattern_g='\\- The input dates associated with the following'
        pattern_s='\\- The input dates associated with the following [0-9]* nodes are considered as outliers, so the nodes were removed from the analysis:  '

        outliers=`grep -i "$pattern_g" {params.wd} | sed -e "s/$pattern_s//g"`
        for o in $outliers
        do
            echo $o >> {output.outliers}
        done

        mv "{params.wd}.date.nexus" "{output.tree}"
        mv "{params.wd}" "{output.log}"
        rm -rf {params.wd}*

        echo `grep "], tMRCA" {output.log} | sed -e 's/rate [0-9\\.e+-]\\+ \\[[0-9\\.e+-]\\+; [0-9\\.e+-]\\+\\], tMRCA //g' \
        | sed -e 's/ \\[[0-9\\.e+-]\\+; [0-9\\.e+-]\\+\\], objective function [0-9\\.e+-]\\+//g'` > {output.rd}
        """

        
rule raxmlng_date_lsd2:
    '''
    Dates a tree and roots the tree according to dates
    no -v
    '''
    input:
        aln_length =  os.path.join(data_dir, 'aln.length'),
        tree = os.path.join(data_dir, 'raxmlng_tree.nwk'),
        ntips = os.path.join(data_dir, 'raxmlng_tree.ntips'),
        dates = os.path.join(data_dir, 'dates_lsd.tab'),
    output:
        tree = os.path.join(data_dir, 'raxmlng_tree.root.lsd2.nexus'),
        log = os.path.join(data_dir, 'raxmlng_tree.root.lsd2.log'),
        rd = os.path.join(data_dir, 'raxmlng_tree.root.lsd2.rootdate'),
        outliers = os.path.join(data_dir, 'raxmlng_tree.outliers'),
    threads: 1
    singularity: "docker://evolbioinfo/lsd2:v1.6.5"
    params:
        mem = 4000,
        name = 'lsd2',
        wd = os.path.join(data_dir, 'raxmlng_tree.root.wd_lsd2'),
    shell:
        """
        n=`head {input.aln_length}`
        t=`head {input.ntips}`
        m=`awk -v t="$t" 'BEGIN {{ m=int(t * 0.33); print m}}'`

        echo "lsd2 -i {input.tree} -d {input.dates} -s $n -o {params.wd} -f 1000 -e 3 -r a"

        lsd2 -i {input.tree} -d {input.dates} -s $n -o {params.wd} -f 1000 -e 3 -r a

        pattern_g='\\- The input dates associated with the following'
        pattern_s='\\- The input dates associated with the following [0-9]* nodes are considered as outliers, so the nodes were removed from the analysis:  '

        outliers=`grep -i "$pattern_g" {params.wd} | sed -e "s/$pattern_s//g"`
        for o in $outliers
        do
            echo $o >> {output.outliers}
        done

        mv "{params.wd}.date.nexus" "{output.tree}"
        mv "{params.wd}" "{output.log}"
        rm -rf {params.wd}*

        echo `grep "], tMRCA" {output.log} | sed -e 's/rate [0-9\\.e+-]\\+ \\[[0-9\\.e+-]\\+; [0-9\\.e+-]\\+\\], tMRCA //g' \
        | sed -e 's/ \\[[0-9\\.e+-]\\+; [0-9\\.e+-]\\+\\], objective function [0-9\\.e+-]\\+//g'` > {output.rd}
        """